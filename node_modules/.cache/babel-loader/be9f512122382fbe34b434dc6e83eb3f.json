{"ast":null,"code":"var _jsxFileName = \"/Users/alirahmani/Project/whatis-my-ip/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ShowMap from \"./components/Map\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const url = `https://geo.ipify.org/api/v2/country,city?apiKey=at_OG5OaGTGRirg0y6bZpWuS9Y2VgAH9&ipAddress`;\n  const [queryString, setQueryString] = useState(url);\n  const [ipInfo, setIpInfo] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(queryString);\n      let result = \"\";\n      console.log(response);\n\n      if (response.ok) {\n        result = await response.json();\n        setIpInfo(result, () => {\n          console.log(ipInfo);\n        });\n        console.log(ipInfo);\n      }\n    } catch (error) {\n      console.log(\"something went wrong\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  console.log(ipInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [ipInfo.ip, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jNZY6okKYtnJ0JzaBUZ+6IOzVag=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ShowMap","useState","useEffect","Route","Routes","Navigate","App","url","queryString","setQueryString","ipInfo","setIpInfo","error","setError","loading","setLoading","getData","response","fetch","result","console","log","ok","json","ip"],"sources":["/Users/alirahmani/Project/whatis-my-ip/src/App.js"],"sourcesContent":["import React from \"react\";\nimport ShowMap from \"./components/Map\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes,Navigate } from \"react-router-dom\";\n\nfunction App() {\n  const url = `https://geo.ipify.org/api/v2/country,city?apiKey=at_OG5OaGTGRirg0y6bZpWuS9Y2VgAH9&ipAddress`;\n\n  const [queryString, setQueryString] = useState(url);\n  const [ipInfo, setIpInfo] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n \n  const getData = async () => {\n    try {setLoading(true);\n    const response = await fetch(queryString);\n    let result = \"\"\n   console.log(response)\n    if (response.ok) {\n      result = await response.json();\n     \n       setIpInfo(result, ()=> {console.log(ipInfo);});\n       \n      console.log(ipInfo);\n    }\n  }catch(error){\n    console.log(\"something went wrong\",error)\n  }finally {\n    setLoading(false);\n }\n\n  };\n  console.log(ipInfo);\n  \n\n  return (\n    <div className=\"App\">\n      <h1>{ipInfo.ip} </h1>\n      {/* <Routes>\n        <Route path=\"/\" element={<ShowMap ipInfo={ipInfo} />} />\n        \n        </Routes> */}\n        \n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAuBC,QAAvB,QAAuC,kBAAvC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,GAAG,GAAI,6FAAb;EAEA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACM,GAAD,CAA9C;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;;EAGA,MAAMe,OAAO,GAAG,YAAY;IAC1B,IAAI;MAACD,UAAU,CAAC,IAAD,CAAV;MACL,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACV,WAAD,CAA5B;MACA,IAAIW,MAAM,GAAG,EAAb;MACDC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;MACC,IAAIA,QAAQ,CAACK,EAAb,EAAiB;QACfH,MAAM,GAAG,MAAMF,QAAQ,CAACM,IAAT,EAAf;QAECZ,SAAS,CAACQ,MAAD,EAAS,MAAK;UAACC,OAAO,CAACC,GAAR,CAAYX,MAAZ;QAAqB,CAApC,CAAT;QAEDU,OAAO,CAACC,GAAR,CAAYX,MAAZ;MACD;IACF,CAXC,CAWD,OAAME,KAAN,EAAY;MACXQ,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCT,KAAnC;IACD,CAbC,SAaO;MACPG,UAAU,CAAC,KAAD,CAAV;IACF;EAEC,CAlBD;;EAmBAK,OAAO,CAACC,GAAR,CAAYX,MAAZ;EAGA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAA,WAAKA,MAAM,CAACc,EAAZ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GA1CQlB,G;;KAAAA,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}