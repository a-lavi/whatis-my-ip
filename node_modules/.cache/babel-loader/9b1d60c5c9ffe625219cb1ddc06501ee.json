{"ast":null,"code":"var _jsxFileName = \"/Users/alirahmani/Project/whatis-my-ip/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ShowMap from \"./Components/ShowMap\";\nimport \"./App.css\";\nimport Button from '@material-ui/core/Button';\nimport Footer from \"./Components/Footer.js\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const url = `https://geo.ipify.org/api/v2/country,city?apiKey=${process.env.REACT_APP_MY_API_KEY}&ipAddress`;\n  const [ipInfo, setIpInfo] = useState(false);\n  const [queryString, setQueryString] = useState(url);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(queryString);\n      let result = \"\";\n      console.log(response);\n\n      if (response.ok) {\n        result = await response.json();\n        setIpInfo(result);\n        console.log(ipInfo);\n      }\n    } catch (error) {\n      console.log(\"something went wrong\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  console.log(ipInfo);\n  useEffect(() => {\n    getData();\n  }, [queryString]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ShowMap, {\n          ipInfo: ipInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nx3LoOYxy6loXb4ervCsvDKhBj0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ShowMap","Button","Footer","useState","useEffect","Route","Routes","Navigate","App","url","process","env","REACT_APP_MY_API_KEY","ipInfo","setIpInfo","queryString","setQueryString","data","setData","error","setError","loading","setLoading","getData","response","fetch","result","console","log","ok","json"],"sources":["/Users/alirahmani/Project/whatis-my-ip/src/App.js"],"sourcesContent":["import React from \"react\";\nimport ShowMap from \"./Components/ShowMap\";\nimport \"./App.css\";\nimport Button from '@material-ui/core/Button';\nimport Footer from \"./Components/Footer.js\"\n\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes,Navigate } from \"react-router-dom\";\n\nfunction App() {\n  const url = `https://geo.ipify.org/api/v2/country,city?apiKey=${process.env.REACT_APP_MY_API_KEY}&ipAddress`;\n  const [ipInfo, setIpInfo] = useState(false);\n  const [queryString, setQueryString] = useState(url);\n  const [data, setData] = useState([])\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n \n  const getData = async () => {\n    try {setLoading(true);\n    const response = await fetch(queryString);\n    let result = \"\"\n   console.log(response)\n    if (response.ok) {\n      result = await response.json();\n     \n       setIpInfo(result);\n       \n      console.log(ipInfo);\n    }\n  }catch(error){\n    console.log(\"something went wrong\",error)\n  }finally {\n    setLoading(false);\n }\n\n  };\n  console.log(ipInfo);\n  useEffect(() => {\n    getData ()\n  },[queryString] );\n\n  return (\n    <div className=\"App\">\n      \n      \n \n      \n      <Routes>\n        <Route path=\"/\" element={<ShowMap ipInfo={ipInfo} />} />\n         {/* <Route path=\"/\" element={<Countries data={data} setData={setData}/>} /> */}\n        </Routes> \n      <Footer />  \n      \n        \n      \n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAuBC,QAAvB,QAAuC,kBAAvC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,GAAG,GAAI,oDAAmDC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,YAAjG;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACM,GAAD,CAA9C;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;;EAGA,MAAMoB,OAAO,GAAG,YAAY;IAC1B,IAAI;MAACD,UAAU,CAAC,IAAD,CAAV;MACL,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACV,WAAD,CAA5B;MACA,IAAIW,MAAM,GAAG,EAAb;MACDC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;MACC,IAAIA,QAAQ,CAACK,EAAb,EAAiB;QACfH,MAAM,GAAG,MAAMF,QAAQ,CAACM,IAAT,EAAf;QAEChB,SAAS,CAACY,MAAD,CAAT;QAEDC,OAAO,CAACC,GAAR,CAAYf,MAAZ;MACD;IACF,CAXC,CAWD,OAAMM,KAAN,EAAY;MACXQ,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCT,KAAnC;IACD,CAbC,SAaO;MACPG,UAAU,CAAC,KAAD,CAAV;IACF;EAEC,CAlBD;;EAmBAK,OAAO,CAACC,GAAR,CAAYf,MAAZ;EACAT,SAAS,CAAC,MAAM;IACdmB,OAAO;EACR,CAFQ,EAEP,CAACR,WAAD,CAFO,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBAKE,QAAC,MAAD;MAAA,uBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,OAAD;UAAS,MAAM,EAAEF;QAAjB;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eASE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAlDQL,G;;KAAAA,G;AAoDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}