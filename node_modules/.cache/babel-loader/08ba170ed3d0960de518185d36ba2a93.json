{"ast":null,"code":"var _jsxFileName = \"/Users/alirahmani/Project/whatis-my-ip/src/Components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from \"react\";\nimport ShowCountries from \"../../../WhatsMyIP/my-app/src/Components/ShowCountries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = _ref => {\n  _s();\n\n  let {\n    country\n  } = _ref;\n  const [data, setData] = useState([]);\n  console.log(country);\n\n  const loadCountries = country => {\n    if (!country) {\n      console.log(\"Problem\");\n    } else {\n      const keyword = country.toUpperCase();\n      const options = {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query: getCountriesQuery(keyword)\n        })\n      };\n\n      const getMe = async () => {\n        const response = await fetch(`https://countries.trevorblades.com/`, options);\n\n        if (response.ok) {\n          const result = await response.json();\n          console.log(result);\n          {\n            setData(result);\n          }\n        }\n      };\n\n      getMe();\n    }\n  };\n\n  const getCountriesQuery = countryCode => {\n    console.log(countryCode);\n    return `{     \n                country(code: \"${countryCode}\") {\n                  name, \n                  phone,\n                  continent {name},\n                  emoji,\n                  native,\n                  currency,\n                  languages {name}\n                }\n}`;\n  };\n\n  useEffect(() => {\n    loadCountries(country);\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ShowCountries, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Countries, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["react","useState","useEffect","ShowCountries","Countries","country","data","setData","console","log","loadCountries","keyword","toUpperCase","options","method","headers","body","JSON","stringify","query","getCountriesQuery","getMe","response","fetch","ok","result","json","countryCode"],"sources":["/Users/alirahmani/Project/whatis-my-ip/src/Components/Countries.js"],"sourcesContent":["import react, { useState, useEffect } from \"react\";\nimport ShowCountries from \"../../../WhatsMyIP/my-app/src/Components/ShowCountries\";\nconst Countries = ({ country }) => {\n  const [data, setData] = useState([]);\n  console.log(country);\n\n  const loadCountries = (country) => {\n    if (!country) {\n      console.log(\"Problem\");\n    } else {\n      const keyword = country.toUpperCase();\n\n      const options = {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: getCountriesQuery(keyword),\n        }),\n      };\n     \n\n      const getMe = async () => {\n        const response = await fetch(\n          `https://countries.trevorblades.com/`,\n          options\n        );\n        if (response.ok) {\n          const result = await response.json();\n          console.log(result);\n          {\n            setData(result);\n          }\n        }\n      };\n      getMe();\n    }\n  };\n  const getCountriesQuery = (countryCode) => {\n    console.log(countryCode);\n  \n    return `{     \n                country(code: \"${countryCode}\") {\n                  name, \n                  phone,\n                  continent {name},\n                  emoji,\n                  native,\n                  currency,\n                  languages {name}\n                }\n}`;\n  };\n  useEffect(() => {\n    loadCountries(country);\n  }, []);\n  console.log(data);\n  return (\n    \n      <div>\n      <ShowCountries data={data}/>\n      </div>\n    \n  );\n};\nexport default Countries;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,wDAA1B;;;AACA,MAAMC,SAAS,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACAO,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;EAEA,MAAMK,aAAa,GAAIL,OAAD,IAAa;IACjC,IAAI,CAACA,OAAL,EAAc;MACZG,OAAO,CAACC,GAAR,CAAY,SAAZ;IACD,CAFD,MAEO;MACL,MAAME,OAAO,GAAGN,OAAO,CAACO,WAAR,EAAhB;MAEA,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,MADM;QAEdC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFK;QAKdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,KAAK,EAAEC,iBAAiB,CAACT,OAAD;QADL,CAAf;MALQ,CAAhB;;MAWA,MAAMU,KAAK,GAAG,YAAY;QACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,qCADyB,EAE1BV,OAF0B,CAA5B;;QAIA,IAAIS,QAAQ,CAACE,EAAb,EAAiB;UACf,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;UACAlB,OAAO,CAACC,GAAR,CAAYgB,MAAZ;UACA;YACElB,OAAO,CAACkB,MAAD,CAAP;UACD;QACF;MACF,CAZD;;MAaAJ,KAAK;IACN;EACF,CAhCD;;EAiCA,MAAMD,iBAAiB,GAAIO,WAAD,IAAiB;IACzCnB,OAAO,CAACC,GAAR,CAAYkB,WAAZ;IAEA,OAAQ;AACZ,iCAAiCA,WAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAVI;EAWD,CAdD;;EAeAzB,SAAS,CAAC,MAAM;IACdQ,aAAa,CAACL,OAAD,CAAb;EACD,CAFQ,EAEN,EAFM,CAAT;EAGAG,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACA,oBAEI;IAAA,uBACA,QAAC,aAAD;MAAe,IAAI,EAAEA;IAArB;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAOD,CA/DD;;GAAMF,S;;KAAAA,S;AAgEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}