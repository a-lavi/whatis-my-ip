{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alirahmani/Project/whatis-my-ip/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/alirahmani/Project/whatis-my-ip/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/alirahmani/Project/whatis-my-ip/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import react,{useState,useEffect}from\"react\";import ShowCountries from'./ShowCountries';import{jsx as _jsx}from\"react/jsx-runtime\";var Countries=function Countries(_ref){var country=_ref.country,show=_ref.show;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];console.log(country);var loadCountries=function loadCountries(country){if(!country){console.log(\"Problem\");}else{var keyword=country.toUpperCase();var options={method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({query:getCountriesQuery(keyword)})};var getMe=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,result;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://countries.trevorblades.com/\",options);case 2:response=_context.sent;if(!response.ok){_context.next=9;break;}_context.next=6;return response.json();case 6:result=_context.sent;console.log(result);setData(result);case 9:case\"end\":return _context.stop();}}},_callee);}));return function getMe(){return _ref2.apply(this,arguments);};}();getMe();}};var getCountriesQuery=function getCountriesQuery(countryCode){console.log(countryCode);return\"{     \\n                country(code: \\\"\".concat(countryCode,\"\\\") {\\n                  name, \\n                  phone,\\n                  capital,\\n                  continent {name},\\n                  emoji,\\n                  native,\\n                  currency,\\n                  languages {name}\\n                }\\n}\");};useEffect(function(){loadCountries(country);},[]);console.log(data);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ShowCountries,{show:show,data:data})});};export default Countries;","map":{"version":3,"names":["react","useState","useEffect","ShowCountries","Countries","country","show","data","setData","console","log","loadCountries","keyword","toUpperCase","options","method","headers","body","JSON","stringify","query","getCountriesQuery","getMe","fetch","response","ok","json","result","countryCode"],"sources":["/Users/alirahmani/Project/whatis-my-ip/src/Components/Countries.js"],"sourcesContent":["import react, { useState, useEffect } from \"react\";\nimport ShowCountries from './ShowCountries'\nconst Countries = ({ country,show}) => {\n  const [data, setData] = useState([]);\n  console.log(country);\n\n  const loadCountries = (country) => {\n    if (!country) {\n      console.log(\"Problem\");\n    } else {\n      const keyword = country.toUpperCase();\n\n      const options = {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: getCountriesQuery(keyword),\n        }),\n      };\n     \n\n      const getMe = async () => {\n        const response = await fetch(\n          `https://countries.trevorblades.com/`,\n          options\n        );\n        if (response.ok) {\n          const result = await response.json();\n          console.log(result);\n          {\n            setData(result);\n          }\n        }\n      };\n      getMe();\n    }\n  };\n  const getCountriesQuery = (countryCode) => {\n    console.log(countryCode);\n  \n    return `{     \n                country(code: \"${countryCode}\") {\n                  name, \n                  phone,\n                  capital,\n                  continent {name},\n                  emoji,\n                  native,\n                  currency,\n                  languages {name}\n                }\n}`;\n  };\n  useEffect(() => {\n    loadCountries(country);\n  }, []);\n  console.log(data);\n  return (\n    \n      <div>\n      <ShowCountries show={show} data={data}/>\n      </div>\n    \n  );\n};\nexport default Countries;\n"],"mappings":"oYAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,cAAP,KAA0B,iBAA1B,C,2CACA,GAAMC,UAAS,CAAG,QAAZA,UAAY,MAAqB,IAAlBC,QAAkB,MAAlBA,OAAkB,CAAVC,IAAU,MAAVA,IAAU,CACrC,cAAwBL,QAAQ,CAAC,EAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eACAC,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAEA,GAAMM,cAAa,CAAG,QAAhBA,cAAgB,CAACN,OAAD,CAAa,CACjC,GAAI,CAACA,OAAL,CAAc,CACZI,OAAO,CAACC,GAAR,CAAY,SAAZ,EACD,CAFD,IAEO,CACL,GAAME,QAAO,CAAGP,OAAO,CAACQ,WAAR,EAAhB,CAEA,GAAMC,QAAO,CAAG,CACdC,MAAM,CAAE,MADM,CAEdC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFK,CAKdC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,KAAK,CAAEC,iBAAiB,CAACT,OAAD,CADL,CAAf,CALQ,CAAhB,CAWA,GAAMU,MAAK,6FAAG,+KACWC,MAAK,uCAE1BT,OAF0B,CADhB,QACNU,QADM,mBAKRA,QAAQ,CAACC,EALD,+CAMWD,SAAQ,CAACE,IAAT,EANX,QAMJC,MANI,eAOVlB,OAAO,CAACC,GAAR,CAAYiB,MAAZ,EAEEnB,OAAO,CAACmB,MAAD,CAAP,CATQ,sDAAH,kBAALL,MAAK,2CAAX,CAaAA,KAAK,GACN,CACF,CAhCD,CAiCA,GAAMD,kBAAiB,CAAG,QAApBA,kBAAoB,CAACO,WAAD,CAAiB,CACzCnB,OAAO,CAACC,GAAR,CAAYkB,WAAZ,EAEA,wDAC6BA,WAD7B,2QAYD,CAfD,CAgBA1B,SAAS,CAAC,UAAM,CACdS,aAAa,CAACN,OAAD,CAAb,CACD,CAFQ,CAEN,EAFM,CAAT,CAGAI,OAAO,CAACC,GAAR,CAAYH,IAAZ,EACA,mBAEI,kCACA,KAAC,aAAD,EAAe,IAAI,CAAED,IAArB,CAA2B,IAAI,CAAEC,IAAjC,EADA,EAFJ,CAOD,CAhED,CAiEA,cAAeH,UAAf"},"metadata":{},"sourceType":"module"}